<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AWS Lambda on T-Mobile Open Source</title>
    <link>/tags/aws-lambda/</link>
    <description>Recent content in AWS Lambda on T-Mobile Open Source</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 22 Jan 2019 10:00:00 -0700</lastBuildDate><atom:link href="/tags/aws-lambda/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>5 Key FaaS Announcements at Re:Invent 2018</title>
      <link>/blog/posts/faas-reinvent-2018/</link>
      <pubDate>Tue, 22 Jan 2019 10:00:00 -0700</pubDate>
      
      <guid>/blog/posts/faas-reinvent-2018/</guid>
      <description>55000+ attendees with 100+ products and services announcements make AWS re:Invent 2018 one of the largest tech events. It was a big event for serverless in general where AWS Lambda continued to be the top trending service from the event.
 Here are 5 key releases/upgrades in the FaaS world along with my notes of when to use it and when not to:
1. Invoke Lambda from Application Load Balancer (ALB): You can now expose your Lambda Functions as an endpoint through ALB.</description>
    </item>
    
    <item>
      <title>Introducing Apigee API Gateway for T-Mobile&#39;s Jazz Serverless Development Platform</title>
      <link>/blog/posts/introducing-apigee-for-jazz/</link>
      <pubDate>Tue, 18 Sep 2018 01:59:28 -0700</pubDate>
      
      <guid>/blog/posts/introducing-apigee-for-jazz/</guid>
      <description>We are thrilled to announce that serverless (aka FaaS) developers now have a choice to expose their serverless functions as RESTful APIs from within the Jazz serverless development platform at a click of a button. If you are not aware of T-Mobile&amp;rsquo;s Jazz Serverless Development Platform, you can check it out on Github.
With this integration, Jazz developers will have an option to choose between multiple API Gateway providers for their serverless functions - APIGEE &amp;amp; AWS API Gateway depending on their business needs &amp;amp; their enterprise compliance requirements.</description>
    </item>
    
  </channel>
</rss>
