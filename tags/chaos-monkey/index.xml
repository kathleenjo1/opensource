<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>chaos monkey on T-Mobile Open Source</title>
    <link>/tags/chaos-monkey/</link>
    <description>Recent content in chaos monkey on T-Mobile Open Source</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 25 Mar 2019 10:00:00 -0700</lastBuildDate><atom:link href="/tags/chaos-monkey/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Monarch: App-level Chaos Engineering</title>
      <link>/blog/posts/monarch-app-level/</link>
      <pubDate>Mon, 25 Mar 2019 10:00:00 -0700</pubDate>
      
      <guid>/blog/posts/monarch-app-level/</guid>
      <description>Motivation As we have talked about in an earlier post, Chaos Engineering is a method by which the stability of complicated cloud infrastructures can be assessed and validated. The current Chaos Engineering tools do not support application-specific attacks, but rather vm-specific attacks. Now, this works if each application is on its own VM, but a lot of our applications are deployed in Cloud Foundry which moves apps without the developers even needing to know what VM their container is running on.</description>
    </item>
    
  </channel>
</rss>
